import type { NuxtAppCompat } from '@nuxt/bridge-schema';
import { defineComponent } from './composables';
export declare const isVue2 = true;
export declare const isVue3 = false;
export declare const defineNuxtComponent: typeof defineComponent;
export interface Context {
    $_nuxtApp: NuxtAppCompat;
}
export declare const setNuxtAppInstance: (nuxt: NuxtAppCompat | null) => void;
/**
 * Ensures that the setup function passed in has access to the Nuxt instance via `useNuxt`.
 * @param nuxt A Nuxt instance
 * @param setup The function to call
 */
export declare function callWithNuxt<T extends (...args: any[]) => any>(nuxt: NuxtAppCompat, setup: T, args?: Parameters<T>): ReturnType<T>;
interface Plugin {
    (nuxt: NuxtAppCompat): Promise<void> | Promise<{
        provide?: Record<string, any>;
    }> | void | {
        provide?: Record<string, any>;
    };
}
export declare function defineNuxtPlugin(plugin: Plugin): (ctx: Context, inject: (id: string, value: any) => void) => void;
export declare const useNuxtApp: () => NuxtAppCompat;
export {};
